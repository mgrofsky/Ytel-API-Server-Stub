/**
 * NOTE: This class is auto generated by the swagger code generator program (1.0.12-1).
 * https://github.com/swagger-api/swagger-codegen
 * Do not edit the class manually.
 */
package io.swagger.api;

import java.util.UUID;
import io.swagger.annotations.*;
import org.springframework.http.ResponseEntity;
import org.springframework.validation.annotation.Validated;
import org.springframework.web.bind.annotation.PathVariable;
import org.springframework.web.bind.annotation.RequestBody;
import org.springframework.web.bind.annotation.RequestHeader;
import org.springframework.web.bind.annotation.RequestMapping;
import org.springframework.web.bind.annotation.RequestMethod;
import org.springframework.web.bind.annotation.RequestParam;
import org.springframework.web.bind.annotation.RequestPart;
import org.springframework.web.multipart.MultipartFile;

import javax.validation.Valid;
import javax.validation.constraints.*;
import java.util.List;
@javax.annotation.Generated(value = "io.swagger.codegen.languages.SpringCodegen", date = "2018-06-15T17:00:45.154Z")

@Api(value = "shortcode", description = "the shortcode API")
public interface ShortcodeApi {

    @ApiOperation(value = "List Inbound SMS", nickname = "shortcodeGetinboundsms", notes = "List All Inbound ShortCode", response = String.class, authorizations = {
        @Authorization(value = "auth")
    }, tags={ "SharedShortCode", })
    @ApiResponses(value = { 
        @ApiResponse(code = 200, message = "", response = String.class) })
    @RequestMapping(value = "/shortcode/getinboundsms.json",
        produces = { "application/json" }, 
        consumes = { "application/x-www-form-urlencoded" },
        method = RequestMethod.POST)
    ResponseEntity<String> shortcodeGetinboundsms(@ApiParam(value = "The page count to retrieve from the total results in the collection. Page indexing starts at 1.", defaultValue="1") @RequestPart(value="page", required=false)  Integer page,@ApiParam(value = "Number of individual resources listed in the response per page", defaultValue="10") @RequestPart(value="pagesize", required=false)  Integer pagesize,@ApiParam(value = "From Number to Inbound ShortCode") @RequestPart(value="from", required=false)  String from,@ApiParam(value = "Only list messages sent to this Short Code") @RequestPart(value="Shortcode", required=false)  String shortcode,@ApiParam(value = "Only list messages sent with the specified date") @Valid @RequestParam(value = "Datecreated", required = false) String datecreated);


    @ApiOperation(value = "List Shortcodes", nickname = "shortcodeListshortcode", notes = "Retrieve a list of shortcode assignment associated with your Ytel account.", response = String.class, authorizations = {
        @Authorization(value = "auth")
    }, tags={ "SharedShortCode", })
    @ApiResponses(value = { 
        @ApiResponse(code = 200, message = "", response = String.class) })
    @RequestMapping(value = "/shortcode/listshortcode.json",
        produces = { "application/json" }, 
        consumes = { "application/x-www-form-urlencoded" },
        method = RequestMethod.POST)
    ResponseEntity<String> shortcodeListshortcode(@ApiParam(value = "The page count to retrieve from the total results in the collection. Page indexing starts at 1.", defaultValue="1") @RequestPart(value="page", required=false)  Integer page,@ApiParam(value = "Number of individual resources listed in the response per page", defaultValue="10") @RequestPart(value="pagesize", required=false)  Integer pagesize,@ApiParam(value = "Only list keywords of shortcode") @Valid @RequestParam(value = "Shortcode", required = false) String shortcode);


    @ApiOperation(value = "List SMS", nickname = "shortcodeListsms", notes = "Retrieve a list of Short Code messages.", response = String.class, authorizations = {
        @Authorization(value = "auth")
    }, tags={ "ShortCode", })
    @ApiResponses(value = { 
        @ApiResponse(code = 200, message = "", response = String.class) })
    @RequestMapping(value = "/shortcode/listsms.json",
        produces = { "application/json" }, 
        consumes = { "application/x-www-form-urlencoded" },
        method = RequestMethod.POST)
    ResponseEntity<String> shortcodeListsms(@ApiParam(value = "Only list messages sent from this Short Code") @RequestPart(value="Shortcode", required=false)  String shortcode,@ApiParam(value = "Only list messages sent to this number") @RequestPart(value="To", required=false)  String to,@ApiParam(value = "Only list messages sent with the specified date") @RequestPart(value="DateSent", required=false)  String dateSent,@ApiParam(value = "The page count to retrieve from the total results in the collection. Page indexing starts at 1.", defaultValue="1") @RequestPart(value="Page", required=false)  Integer page,@ApiParam(value = "The count of objects to return per page.", defaultValue="10") @RequestPart(value="PageSize", required=false)  Integer pageSize);


    @ApiOperation(value = "Send SMS", nickname = "shortcodeSendsms", notes = "Send an SMS from a Ytel ShortCode", response = String.class, authorizations = {
        @Authorization(value = "auth")
    }, tags={ "SharedShortCode", })
    @ApiResponses(value = { 
        @ApiResponse(code = 200, message = "", response = String.class) })
    @RequestMapping(value = "/shortcode/sendsms.json",
        produces = { "application/json" }, 
        consumes = { "application/x-www-form-urlencoded" },
        method = RequestMethod.POST)
    ResponseEntity<String> shortcodeSendsms(@ApiParam(value = "The Short Code number that is the sender of this message", required=true) @RequestPart(value="shortcode", required=true)  String shortcode,@ApiParam(value = "A valid 10-digit number that should receive the message", required=true) @RequestPart(value="to", required=true)  String to,@ApiParam(value = "The unique identifier for the template used for the message", required=true) @RequestPart(value="templateid", required=true)  UUID templateid,@ApiParam(value = "format of your data, example: {companyname}:test,{otpcode}:1234", required=true) @RequestPart(value="data", required=true)  String data,@ApiParam(value = "Specifies the HTTP method used to request the required URL once the Short Code message is sent.", defaultValue="GET") @RequestPart(value="Method", required=false)  String method,@ApiParam(value = "URL that can be requested to receive notification when Short Code message was sent.") @RequestPart(value="MessageStatusCallback", required=false)  String messageStatusCallback);


    @ApiOperation(value = "Update Shortcode", nickname = "shortcodeUpdateshortcode", notes = "Update Assignment", response = String.class, authorizations = {
        @Authorization(value = "auth")
    }, tags={ "SharedShortCode", })
    @ApiResponses(value = { 
        @ApiResponse(code = 200, message = "", response = String.class) })
    @RequestMapping(value = "/shortcode/updateshortcode.json",
        produces = { "application/json" }, 
        consumes = { "application/x-www-form-urlencoded" },
        method = RequestMethod.POST)
    ResponseEntity<String> shortcodeUpdateshortcode(@ApiParam(value = "List of valid shortcode to your Ytel account", required=true) @RequestPart(value="Shortcode", required=true)  String shortcode,@ApiParam(value = "User generated name of the shortcode") @RequestPart(value="FriendlyName", required=false)  String friendlyName,@ApiParam(value = "URL that can be requested to receive notification when call has ended. A set of default parameters will be sent here once the call is finished.") @RequestPart(value="CallbackUrl", required=false)  String callbackUrl,@ApiParam(value = "Specifies the HTTP method used to request the required StatusCallBackUrl once call connects.") @RequestPart(value="CallbackMethod", required=false)  String callbackMethod,@ApiParam(value = "URL used if any errors occur during execution of InboundXML or at initial request of the required Url provided with the POST.") @RequestPart(value="FallbackUrl", required=false)  String fallbackUrl,@ApiParam(value = "Specifies the HTTP method used to request the required FallbackUrl once call connects.") @RequestPart(value="FallbackUrlMethod", required=false)  String fallbackUrlMethod);


    @ApiOperation(value = "View Shortcode", nickname = "shortcodeViewshortcode", notes = "The response returned here contains all resource properties associated with the given Shortcode.", response = String.class, authorizations = {
        @Authorization(value = "auth")
    }, tags={ "SharedShortCode", })
    @ApiResponses(value = { 
        @ApiResponse(code = 200, message = "", response = String.class) })
    @RequestMapping(value = "/shortcode/viewshortcode.json",
        produces = { "application/json" }, 
        consumes = { "application/x-www-form-urlencoded" },
        method = RequestMethod.POST)
    ResponseEntity<String> shortcodeViewshortcode(@ApiParam(value = "List of valid Shortcode to your Ytel account", required=true) @RequestPart(value="Shortcode", required=true)  String shortcode);


    @ApiOperation(value = "View SMS", nickname = "shortcodeViewsms", notes = "View a single Sms Short Code message.", response = String.class, authorizations = {
        @Authorization(value = "auth")
    }, tags={ "ShortCode", })
    @ApiResponses(value = { 
        @ApiResponse(code = 200, message = "", response = String.class) })
    @RequestMapping(value = "/shortcode/viewsms.json",
        produces = { "application/json" }, 
        consumes = { "application/x-www-form-urlencoded" },
        method = RequestMethod.POST)
    ResponseEntity<String> shortcodeViewsms(@ApiParam(value = "The unique identifier for the sms resource", required=true) @RequestPart(value="MessageSid", required=true)  String messageSid);

}
