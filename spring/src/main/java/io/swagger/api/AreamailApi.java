/**
 * NOTE: This class is auto generated by the swagger code generator program (1.0.12-1).
 * https://github.com/swagger-api/swagger-codegen
 * Do not edit the class manually.
 */
package io.swagger.api;

import io.swagger.annotations.*;
import org.springframework.http.ResponseEntity;
import org.springframework.validation.annotation.Validated;
import org.springframework.web.bind.annotation.PathVariable;
import org.springframework.web.bind.annotation.RequestBody;
import org.springframework.web.bind.annotation.RequestHeader;
import org.springframework.web.bind.annotation.RequestMapping;
import org.springframework.web.bind.annotation.RequestMethod;
import org.springframework.web.bind.annotation.RequestParam;
import org.springframework.web.bind.annotation.RequestPart;
import org.springframework.web.multipart.MultipartFile;

import javax.validation.Valid;
import javax.validation.constraints.*;
import java.util.List;
@javax.annotation.Generated(value = "io.swagger.codegen.languages.SpringCodegen", date = "2018-06-18T20:13:28.172Z")

@Api(value = "areamail", description = "the areamail API")
public interface AreamailApi {

    @ApiOperation(value = "Create AreaMail", nickname = "areamailCreate", notes = "Create a new AreaMail object.", response = String.class, authorizations = {
        @Authorization(value = "auth")
    }, tags={ "AreaMail", })
    @ApiResponses(value = { 
        @ApiResponse(code = 200, message = "", response = String.class) })
    @RequestMapping(value = "/areamail/create.json",
        produces = { "application/json" }, 
        consumes = { "application/x-www-form-urlencoded" },
        method = RequestMethod.POST)
    ResponseEntity<String> areamailCreate(@ApiParam(value = "List of routes that AreaMail should be delivered to.  A single route can be either a zipcode or a carrier route.List of routes that AreaMail should be delivered to.  A single route can be either a zipcode or a carrier route. A carrier route is in the form of 92610-C043 where the carrier route is composed of 5 numbers for zipcode, 1 letter for carrier route type, and 3 numbers for carrier route code. Delivery can be sent to mutliple routes by separating them with a commas. Valid Values: 92656, 92610-C043", required=true) @RequestPart(value="routes", required=true)  String routes,@ApiParam(value = "Set an existing areamail by attaching its AreamailId.", required=true) @RequestPart(value="attachbyid", required=true)  String attachbyid,@ApiParam(value = "The front of the AreaMail item to be created. This can be a URL, local file, or an HTML string. Supported file types are PDF, PNG, and JPEG. Back required", required=true) @RequestPart(value="front", required=true)  String front,@ApiParam(value = "The back of the AreaMail item to be created. This can be a URL, local file, or an HTML string. Supported file types are PDF, PNG, and JPEG.", required=true) @RequestPart(value="back", required=true)  String back,@ApiParam(value = "A string value to use as a description for this AreaMail item.") @RequestPart(value="description", required=false)  String description,@ApiParam(value = "The delivery location type.") @RequestPart(value="targettype", required=false)  String targettype,@ApiParam(value = "A string value that contains HTML markup.") @RequestPart(value="htmldata", required=false)  String htmldata);


    @ApiOperation(value = "Delete AreaMail", nickname = "areamailDelete", notes = "Remove an AreaMail object by its AreaMailId.", response = String.class, authorizations = {
        @Authorization(value = "auth")
    }, tags={ "AreaMail", })
    @ApiResponses(value = { 
        @ApiResponse(code = 200, message = "", response = String.class) })
    @RequestMapping(value = "/areamail/delete.json",
        produces = { "application/json" }, 
        consumes = { "application/x-www-form-urlencoded" },
        method = RequestMethod.POST)
    ResponseEntity<String> areamailDelete(@ApiParam(value = "The unique identifier for an AreaMail object.", required=true) @RequestPart(value="areamailid", required=true)  String areamailid);


    @ApiOperation(value = "List AreaMails", nickname = "areamailLists", notes = "Retrieve a list of AreaMail objects.", response = String.class, authorizations = {
        @Authorization(value = "auth")
    }, tags={ "AreaMail", })
    @ApiResponses(value = { 
        @ApiResponse(code = 200, message = "", response = String.class) })
    @RequestMapping(value = "/areamail/lists.json",
        produces = { "application/json" }, 
        consumes = { "application/x-www-form-urlencoded" },
        method = RequestMethod.POST)
    ResponseEntity<String> areamailLists(@ApiParam(value = "The page count to retrieve from the total results in the collection. Page indexing starts at 1.", defaultValue="1") @RequestPart(value="page", required=false)  Integer page,@ApiParam(value = "The count of objects to return per page.", defaultValue="10") @RequestPart(value="pagesize", required=false)  Integer pagesize,@ApiParam(value = "The unique identifier for an AreaMail object.") @RequestPart(value="areamailsid", required=false)  String areamailsid,@ApiParam(value = "The date the AreaMail was created.") @RequestPart(value="dateCreated", required=false)  String dateCreated);


    @ApiOperation(value = "View AreaMail", nickname = "areamailView", notes = "Retrieve an AreaMail object by its AreaMailId.", response = String.class, authorizations = {
        @Authorization(value = "auth")
    }, tags={ "AreaMail", })
    @ApiResponses(value = { 
        @ApiResponse(code = 200, message = "", response = String.class) })
    @RequestMapping(value = "/areamail/view.json",
        produces = { "application/json" }, 
        consumes = { "application/x-www-form-urlencoded" },
        method = RequestMethod.POST)
    ResponseEntity<String> areamailView(@ApiParam(value = "The unique identifier for an AreaMail object.", required=true) @RequestPart(value="areamailid", required=true)  String areamailid);

}
