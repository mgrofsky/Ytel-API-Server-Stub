/**
 * NOTE: This class is auto generated by the swagger code generator program (2.3.1).
 * https://github.com/swagger-api/swagger-codegen
 * Do not edit the class manually.
 */
package io.swagger.api;

import java.util.UUID;
import io.swagger.annotations.*;
import org.springframework.http.ResponseEntity;
import org.springframework.validation.annotation.Validated;
import org.springframework.web.bind.annotation.PathVariable;
import org.springframework.web.bind.annotation.RequestBody;
import org.springframework.web.bind.annotation.RequestHeader;
import org.springframework.web.bind.annotation.RequestMapping;
import org.springframework.web.bind.annotation.RequestMethod;
import org.springframework.web.bind.annotation.RequestParam;
import org.springframework.web.bind.annotation.RequestPart;
import org.springframework.web.multipart.MultipartFile;

import javax.validation.Valid;
import javax.validation.constraints.*;
import java.util.List;
@javax.annotation.Generated(value = "io.swagger.codegen.languages.SpringCodegen", date = "2018-11-21T18:17:51.171Z")

@Api(value = "template", description = "the template API")
public interface TemplateApi {

    @ApiOperation(value = "List Templates", nickname = "templateLists", notes = "List Shortcode Templates by Type", response = String.class, authorizations = {
        @Authorization(value = "auth")
    }, tags={ "SharedShortCode", })
    @ApiResponses(value = { 
        @ApiResponse(code = 200, message = "", response = String.class) })
    @RequestMapping(value = "/template/lists.json",
        produces = { "application/json" }, 
        consumes = { "application/x-www-form-urlencoded" },
        method = RequestMethod.POST)
    ResponseEntity<String> templateLists(@ApiParam(value = "The type (category) of template Valid values: marketing, authorization", defaultValue="authorization") @RequestParam(value="type", required=false)  String type,@ApiParam(value = "The page count to retrieve from the total results in the collection. Page indexing starts at 1.", defaultValue="1") @RequestParam(value="page", required=false)  Integer page,@ApiParam(value = "The count of objects to return per page.", defaultValue="10") @RequestParam(value="pagesize", required=false)  Integer pagesize,@ApiParam(value = "Only list templates of type") @RequestParam(value="Shortcode", required=false)  String shortcode);


    @ApiOperation(value = "View Template", nickname = "templateView", notes = "View a Shared ShortCode Template", response = String.class, authorizations = {
        @Authorization(value = "auth")
    }, tags={ "SharedShortCode", })
    @ApiResponses(value = { 
        @ApiResponse(code = 200, message = "", response = String.class) })
    @RequestMapping(value = "/template/view.json",
        produces = { "application/json" }, 
        consumes = { "application/x-www-form-urlencoded" },
        method = RequestMethod.POST)
    ResponseEntity<String> templateView(@ApiParam(value = "The unique identifier for a template object", required=true) @RequestParam(value="TemplateId", required=true)  UUID templateId);

}
